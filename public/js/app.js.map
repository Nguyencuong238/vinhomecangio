{"version":3,"file":"/js/app.js","mappings":"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","sources":["webpack:///./resources/limitless/js/app.js","webpack:///./resources/limitless/js/limitless.js"],"sourcesContent":["global.Popper = require('popper.js').default;\nglobal.$ = global.jQuery = require('jquery');\n\nrequire('bootstrap');\n\nrequire('./limitless')","/* ------------------------------------------------------------------------------\n *\n *  # Template JS core\n *\n *  Includes minimum required JS code for proper template functioning\n *\n * ---------------------------------------------------------------------------- */\n\n\n// Setup module\n// ------------------------------\n\nconst App = function () {\n\n\n    // Utils\n    // -------------------------\n\n    //\n    // Transitions\n    //\n\n    // Disable all transitions\n    const transitionsDisabled = function() {\n        $('body').addClass('no-transitions');\n    };\n\n    // Enable all transitions\n    const transitionsEnabled = function() {\n        $('body').removeClass('no-transitions');\n    };\n\n\n    //\n    // Detect OS to apply custom scrollbars\n    //\n\n    // Custom scrollbar style is controlled by CSS. This function is needed to keep default\n    // scrollbars on MacOS and avoid usage of extra JS libraries\n    const detectOS = function() {\n        const platform = window.navigator.platform,\n              windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n              customScrollbarsClass = 'custom-scrollbars';\n\n        // Add class if OS is windows\n        windowsPlatforms.indexOf(platform) != -1 && $('body').addClass(customScrollbarsClass);\n    };\n\n\n\n    // Sidebars\n    // -------------------------\n\n    //\n    // On desktop\n    //\n\n    // Resize main sidebar\n    const sidebarMainResize = function() {\n\n        // Elements\n        const sidebarMainElement = $('.sidebar-main'),\n              sidebarMainToggler = $('.sidebar-main-resize'),\n              resizeClass = 'sidebar-main-resized',\n              unfoldClass = 'sidebar-main-unfold';\n\n\n        // Define variables\n        const unfoldDelay = 150;\n        let timerStart,\n            timerFinish;\n\n        // Toggle classes on click\n        sidebarMainToggler.on('click', function(e) {\n            sidebarMainElement.toggleClass(resizeClass);\n            !sidebarMainElement.hasClass(resizeClass) && sidebarMainElement.removeClass(unfoldClass);\n        });\n\n        // Add class on mouse enter\n        sidebarMainElement.on('mouseenter', function() {\n            clearTimeout(timerFinish);\n            timerStart = setTimeout(function() {\n                sidebarMainElement.hasClass(resizeClass) && sidebarMainElement.addClass(unfoldClass);\n            }, unfoldDelay);\n        });\n\n        // Remove class on mouse leave\n        sidebarMainElement.on('mouseleave', function() {\n            clearTimeout(timerStart);\n            timerFinish = setTimeout(function() {\n                sidebarMainElement.removeClass(unfoldClass);\n            }, unfoldDelay);\n        });\n    };\n\n    // Toggle main sidebar\n    const sidebarMainToggle = function() {\n\n        // Elements\n        const sidebarMainElement = $('.sidebar-main'),\n              sidebarMainRestElements = $('.sidebar:not(.sidebar-main):not(.sidebar-component)'),\n              sidebarMainDesktopToggler = $('.sidebar-main-toggle'),\n              sidebarMainMobileToggler = $('.sidebar-mobile-main-toggle'),\n              sidebarCollapsedClass = 'sidebar-collapsed',\n              sidebarMobileExpandedClass = 'sidebar-mobile-expanded';\n\n        // On desktop\n        sidebarMainDesktopToggler.on('click', function(e) {\n            e.preventDefault();\n            sidebarMainElement.toggleClass(sidebarCollapsedClass);\n        });                \n\n        // On mobile\n        sidebarMainMobileToggler.on('click', function(e) {\n            e.preventDefault();\n            sidebarMainElement.toggleClass(sidebarMobileExpandedClass);\n            sidebarMainRestElements.removeClass(sidebarMobileExpandedClass);\n        });                \n    };\n\n    // Toggle secondary sidebar\n    const sidebarSecondaryToggle = function() {\n\n        // Elements\n        const sidebarSecondaryElement = $('.sidebar-secondary'),\n              sidebarSecondaryRestElements = $('.sidebar:not(.sidebar-secondary):not(.sidebar-component)'),\n              sidebarSecondaryDesktopToggler = $('.sidebar-secondary-toggle'),\n              sidebarSecondaryMobileToggler = $('.sidebar-mobile-secondary-toggle'),\n              sidebarCollapsedClass = 'sidebar-collapsed',\n              sidebarMobileExpandedClass = 'sidebar-mobile-expanded';\n\n        // On desktop\n        sidebarSecondaryDesktopToggler.on('click', function(e) {\n            e.preventDefault();\n            sidebarSecondaryElement.toggleClass(sidebarCollapsedClass);\n        });\n\n        // On mobile\n        sidebarSecondaryMobileToggler.on('click', function(e) {\n            e.preventDefault();\n            sidebarSecondaryElement.toggleClass(sidebarMobileExpandedClass);\n            sidebarSecondaryRestElements.removeClass(sidebarMobileExpandedClass);\n        });\n    };\n\n    // Toggle right sidebar\n    const sidebarRightToggle = function() {\n\n        // Elements\n        const sidebarRightElement = $('.sidebar-right'),\n              sidebarRightRestElements = $('.sidebar:not(.sidebar-right):not(.sidebar-component)'),\n              sidebarRightDesktopToggler = $('.sidebar-right-toggle'),\n              sidebarRightMobileToggler = $('.sidebar-mobile-right-toggle'),\n              sidebarCollapsedClass = 'sidebar-collapsed',\n              sidebarMobileExpandedClass = 'sidebar-mobile-expanded';\n\n        // On desktop\n        sidebarRightDesktopToggler.on('click', function(e) {\n            e.preventDefault();\n            sidebarRightElement.toggleClass(sidebarCollapsedClass);\n        });\n\n        // On mobile\n        sidebarRightMobileToggler.on('click', function(e) {\n            e.preventDefault();\n            sidebarRightElement.toggleClass(sidebarMobileExpandedClass);\n            sidebarRightRestElements.removeClass(sidebarMobileExpandedClass);\n        });                \n    };\n\n    // Toggle component sidebar\n    const sidebarComponentToggle = function() {\n\n        // Elements\n        const sidebarComponentElement = $('.sidebar-component'),\n              sidebarComponentMobileToggler = $('.sidebar-mobile-component-toggle'),\n              sidebarMobileExpandedClass = 'sidebar-mobile-expanded';\n\n        // Toggle classes\n        sidebarComponentMobileToggler.on('click', function(e) {\n            e.preventDefault();\n            sidebarComponentElement.toggleClass(sidebarMobileExpandedClass);\n        });\n    };\n\n\n    // Navigations\n    // -------------------------\n\n    // Sidebar navigation\n    const navigationSidebar = function() {\n\n        // Define default class names and options\n        var navClass = 'nav-sidebar',\n            navItemClass = 'nav-item',\n            navItemOpenClass = 'nav-item-open',\n            navLinkClass = 'nav-link',\n            navSubmenuClass = 'nav-group-sub',\n            navScrollSpyClass = 'nav-scrollspy',\n            navSlidingSpeed = 250;\n\n        // Configure collapsible functionality\n        $('.' + navClass + ':not(.' + navScrollSpyClass + ')').each(function() {\n            $(this).find('.' + navItemClass).has('.' + navSubmenuClass).children('.' + navItemClass + ' > ' + '.' + navLinkClass).not('.disabled').on('click', function (e) {\n                e.preventDefault();\n\n                // Simplify stuff\n                var $target = $(this);\n\n                // Collapsible\n                if($target.parent('.' + navItemClass).hasClass(navItemOpenClass)) {\n                    $target.parent('.' + navItemClass).removeClass(navItemOpenClass).children('.' + navSubmenuClass).slideUp(navSlidingSpeed);\n                }\n                else {\n                    $target.parent('.' + navItemClass).addClass(navItemOpenClass).children('.' + navSubmenuClass).slideDown(navSlidingSpeed);\n                }\n\n                // Accordion\n                if ($target.parents('.' + navClass).data('nav-type') == 'accordion') {\n                    $target.parent('.' + navItemClass).siblings(':has(.' + navSubmenuClass + ')').removeClass(navItemOpenClass).children('.' + navSubmenuClass).slideUp(navSlidingSpeed);\n                }\n            });\n        });\n\n        // Disable click in disabled navigation items\n        $(document).on('click', '.' + navClass + ' .disabled', function(e) {\n            e.preventDefault();\n        });\n    };\n\n    // Navbar navigation\n    const navigationNavbar = function() {\n\n        // Prevent dropdown from closing on click\n        $(document).on('click', '.dropdown-content', function(e) {\n            e.stopPropagation();\n        });\n\n        // Disabled links\n        $('.navbar-nav .disabled a, .nav-item-levels .disabled').on('click', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        });\n\n        // Show tabs inside dropdowns\n        $('.dropdown-content a[data-toggle=\"tab\"]').on('click', function() {\n            $(this).tab('show');\n        });\n    };\n\n\n    // Components\n    // -------------------------\n\n    // Tooltip\n    const componentTooltip = function() {\n        $('[data-popup=\"tooltip\"]').tooltip({\n            boundary: '.page-content'\n        });\n    };\n\n    // Popover\n    const componentPopover = function() {\n        $('[data-popup=\"popover\"]').popover({\n            boundary: '.page-content'\n        });\n    };\n\n    // \"Go to top\" button\n    const componentToTopButton = function() {\n\n        // Elements\n        const toTopContainer = $('.content-wrapper'),\n              scrollableContainer = $('.content-inner'),\n              scrollableDistance = 250;\n\n\n        // Append only if container exists\n        if (scrollableContainer) {\n\n            // Create button\n            toTopContainer.append($('<div class=\"btn-to-top\"><button type=\"button\" class=\"btn btn-dark btn-icon rounded-pill\"><i class=\"icon-arrow-up8\"></i></button></div>'));\n\n            // Show and hide on scroll\n            const to_top_button = $('.btn-to-top'),\n                  add_class_on_scroll = function() {\n                    to_top_button.addClass('btn-to-top-visible');\n                  },\n                  remove_class_on_scroll = function() {\n                    to_top_button.removeClass('btn-to-top-visible');\n                  };\n\n            scrollableContainer.on('scroll', function() { \n                const scrollpos = scrollableContainer.scrollTop();\n                if (scrollpos >= scrollableDistance) {\n                    add_class_on_scroll();\n                }\n                else {\n                    remove_class_on_scroll();\n                }\n            });\n\n            // Scroll to top on click\n            $('.btn-to-top .btn').on('click', function() {\n                scrollableContainer.scrollTop(0);\n            });\n        }\n    };\n\n\n    // Card actions\n    // -------------------------\n\n    // Reload card (uses BlockUI extension)\n    const cardActionReload = function() {\n\n        // Elements\n        const buttonElement = $('[data-action=reload]'),\n              overlayContainer = '.card',\n              overlayClass = 'card-overlay',\n              spinnerClass = 'icon-spinner9 spinner text-body',\n              overlayAnimationClass = 'card-overlay-fadeout';\n\n\n        // Configure\n        buttonElement.on('click', function(e) {\n            e.preventDefault();\n\n            // Create overlay with spinner\n            $(this).parents(overlayContainer).append($('<div class=\"' + overlayClass + '\"><i class=\"' + spinnerClass + '\"></i></div>'));\n\n            // Remove overlay after 2.5s, for demo only\n            setTimeout(function() {\n                $('.' + overlayClass).addClass(overlayAnimationClass).on('animationend animationcancel', function() {\n                    $(this).remove();\n                });\n            }, 2500);\n        });\n    };\n\n    // Collapse card\n    const cardActionCollapse = function() {\n\n        // Elements\n        const buttonElement = $('[data-action=collapse]'),\n              cardContainer = '.card',\n              cardCollapsedClass = 'card-collapsed';\n\n        // Configure\n        buttonElement.on('click', function(e) {\n            e.preventDefault();\n\n            const parentContainer = $(this).parents('.card'),\n                  collapsibleContainer = parentContainer.find('> .collapse');\n\n            if (parentContainer.hasClass(cardCollapsedClass)) {\n                parentContainer.removeClass(cardCollapsedClass);\n                collapsibleContainer.collapse('show');\n            }\n            else {\n                parentContainer.addClass(cardCollapsedClass);\n                collapsibleContainer.collapse('hide');\n            }\n        });\n    };\n\n    // Remove card\n    const cardActionRemove = function() {\n\n        // Elements\n        const buttonElement = $('[data-action=remove]'),\n              cardContainer = '.card';\n\n        // Configure\n        buttonElement.on('click', function(e) {\n            e.preventDefault();\n            $(this).parents(cardContainer).slideUp(150);\n        });\n    };\n\n    // Card fullscreen mode\n    const cardActionFullscreen = function() {\n\n        // Elements\n        const buttonElement = '[data-action=fullscreen]',\n              buttonClass = 'list-icons-item',\n              buttonContainerClass = 'list-icons',\n              cardFullscreenClass = 'card-fullscreen',\n              collapsedClass = 'collapsed-in-fullscreen',\n              scrollableContainerClass = 'content-inner',\n              fullscreenAttr = 'data-fullscreen';\n\n        // Configure\n        $(buttonElement).on('click', function(e) {\n            e.preventDefault();\n            const button = $(this);\n\n            // Get closest card container\n            const cardFullscreen = button.parents('.card');\n\n            // Toggle required classes\n            cardFullscreen.toggleClass(cardFullscreenClass);\n\n            // Toggle classes depending on state\n            if (!cardFullscreen.hasClass(cardFullscreenClass)) {\n                button.removeAttr(fullscreenAttr);\n                cardFullscreen.find('.' + collapsedClass).removeClass('show');\n                $('.' + scrollableContainerClass).removeClass('overflow-hidden');\n                button.parents('.' + buttonContainerClass).find('.' + buttonClass + ':not(' + buttonElement + ')').removeClass('d-none');\n            }\n            else {\n                button.attr(fullscreenAttr, 'active');\n                cardFullscreen.removeAttr('style');\n                cardFullscreen.find('.collapse:not(.show)').addClass('show ' + collapsedClass);\n                $('.' + scrollableContainerClass).addClass('overflow-hidden');\n                button.parents('.' + buttonContainerClass).find('.' + buttonClass + ':not(' + buttonElement + ')').addClass('d-none');\n            }\n\n        });\n    };\n\n\n    // Misc\n    // -------------------------\n\n    // Re-declare dropdown boundary for app container\n    const dropdownMenus = function() {\n        $.fn.dropdown.Constructor.Default.boundary = '.page-content';\n    };\n\n    // Dropdown submenus. Trigger on click\n    const dropdownSubmenu = function() {\n\n        // All parent levels require .dropdown-toggle class\n        $('.dropdown-menu').find('.dropdown-submenu').not('.disabled').find('.dropdown-toggle').on('click', function(e) {\n            e.stopPropagation();\n            e.preventDefault();\n\n            const button = $(this);\n\n            // Remove \"show\" class in all siblings\n            button.parent().siblings().removeClass('show').find('.show').removeClass('show');\n\n            // Toggle submenu\n            button.parent().toggleClass('show').children('.dropdown-menu').toggleClass('show');\n\n            // Hide all levels when parent dropdown is closed\n            button.parents('.show').on('hidden.bs.dropdown', function(e) {\n                $('.dropdown-submenu .show, .dropdown-submenu.show').removeClass('show');\n            });\n        });\n    };\n\n    // Header elements toggler\n    const componentHeaderElements = function() {\n\n        // Toggle visible state of header elements\n        $('.header-elements-toggle').on('click', function(e) {\n            e.preventDefault();\n            $(this).parents('[class*=header-elements-]:not(.header-elements-toggle)').find('.header-elements').toggleClass('d-none');\n        });\n\n        // Toggle visible state of footer elements\n        $('.footer-elements-toggle').on('click', function(e) {\n            e.preventDefault();\n            $(this).parents('.card-footer').find('.footer-elements').toggleClass('d-none');\n        });\n    };\n\n\n    //\n    // Return objects assigned to module\n    //\n\n    return {\n\n        // Disable transitions before page is fully loaded\n        initBeforeLoad: function() {\n            detectOS();\n            transitionsDisabled();\n        },\n\n        // Enable transitions when page is fully loaded\n        initAfterLoad: function() {\n            transitionsEnabled();\n        },\n        // Initialize all components\n        initComponents: function() {\n            componentTooltip();\n            componentPopover();\n            componentToTopButton();\n            componentHeaderElements();\n        },\n\n        // Initialize all sidebars\n        initSidebars: function() {\n            sidebarMainResize();\n            sidebarMainToggle();\n            sidebarSecondaryToggle();\n            sidebarRightToggle();\n            sidebarComponentToggle();\n        },\n\n        // Initialize all navigations\n        initNavigations: function() {\n            navigationSidebar();\n            navigationNavbar();\n        },\n\n        // Initialize all card actions\n        initCardActions: function() {\n            cardActionReload();\n            cardActionCollapse();\n            cardActionRemove();\n            cardActionFullscreen();\n        },\n\n        // Dropdown submenu\n        initDropdowns: function() {\n            dropdownMenus();\n            dropdownSubmenu();\n        },\n\n        // Initialize core\n        initCore: function() {\n            App.initBeforeLoad();\n            App.initSidebars();\n            App.initNavigations();\n            App.initComponents();\n            App.initCardActions();\n            App.initDropdowns();\n        }\n    }\n}();\n\n\n// Initialize module\n// ------------------------------\n\n// When content is loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    App.initCore();\n});\n\n// When page is fully loaded\nwindow.addEventListener('load', function() {\n    App.initAfterLoad();\n});"],"names":["global","Popper","require","$","jQuery","componentToTopButton","App","toTopContainer","scrollableContainer","append","to_top_button","on","scrollTop","addClass","removeClass","initBeforeLoad","platform","window","navigator","indexOf","initAfterLoad","initComponents","tooltip","boundary","popover","e","preventDefault","this","parents","find","toggleClass","initSidebars","timerStart","timerFinish","sidebarMainElement","sidebarMainToggler","resizeClass","unfoldClass","sidebarSecondaryElement","sidebarSecondaryRestElements","sidebarSecondaryDesktopToggler","sidebarSecondaryMobileToggler","sidebarMobileExpandedClass","sidebarComponentElement","hasClass","clearTimeout","setTimeout","sidebarMainRestElements","sidebarMainDesktopToggler","sidebarMainMobileToggler","sidebarMainToggle","sidebarRightElement","sidebarRightRestElements","sidebarRightDesktopToggler","sidebarRightMobileToggler","sidebarRightToggle","initNavigations","navClass","navItemOpenClass","each","has","children","not","$target","parent","slideUp","slideDown","data","siblings","document","stopPropagation","tab","initCardActions","buttonElement","cardCollapsedClass","remove","parentContainer","collapsibleContainer","collapse","cardFullscreenClass","collapsedClass","fullscreenAttr","button","cardFullscreen","attr","removeAttr","cardActionFullscreen","initDropdowns","fn","dropdown","Constructor","Default","initCore","addEventListener"],"sourceRoot":""}